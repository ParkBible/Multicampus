/*
	-5는 2진수로 어떻게 표기될까?  : 5에서 0과 1을 바꾸고 1을 더해준다.
	
	0000 0101
	1111 1011 -> -5
	이게 왜 -5인가여?
	-> 5랑 더해서 0이 나오는 숫자가 0이 아니겠음??(2의 보수법)
	
	2의 보수법에 의하면 맨 앞자리 비트가 0이면 양수, 1이면 음수가 된다.
	맨 앞자리 bit를 signbit라고 한다.
*/
public class Test197{
	public static void main(String[] args){
		System.out.println(-5 >> 1);    // -5를 한번 밀었더니 -3
		System.out.println(-1 >>> 1);   // 2147483647
	}
}
/*
	>> 으로 밀어주고 빈공간에 signbit를 채운다.
	그래서 11111011(-5) 을 밀면 빈공간에 1이 채워져서
	11111101(-3) 이 된다.
	또 밀면 11111110(-1)
	
	-1 >>> 1을 했을 때. 
	>>> : 부호 상관 없이 무조건 0으로 채운다.
	1111 1111 1111 1111 1111 1111 1111 1111    // -1
	0111 1111 1111 1111 1111 1111 1111 1111    // -1 >>> 1을 했을 때. 
	
	2147483647은 int가 표현가능한 가장 큰 숫자가 됨.
	>>>은 부호에 상관없이 무조건 밀고 난 다음 0으로 채운다고 하여, unsigned shift라고 한다.
*/