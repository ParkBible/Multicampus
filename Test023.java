public class Test023{
	public static void main(String[] args){
		char i = 'A';
		int j = i;
		
		System.out.println(i);
		System.out.println(j);
	}
}

/*
	문자 하나를 ''로 감싼 값을 대입할 수 있는 변수를 생성하는 자료형이 char
	char은 int형으로 자동 형변환 가능(아스키코드).(즉 char<int)
	char에 저장되는 값은 아스키코드라는 정수값이기 때문에 int로 자동 형변환이 가능함.
	아스키코드는 7비트 즉 0~127의 문자만 지정가능함 1바이트만 쓰기로 약속되었기 때문.
	초창기에는 아스키코드 밖에 없어서 모든 컴에서는 영어만 사용이 가능했음
	
	바이트를 두개 붙여서 문자 하나를 표현하는 방법으로 갈 수밖에 없다.
	영어 두 글자 표기할 수 있는 기억공간을 한글은 한 글자를 표기하기 위해 사용함.
	완성형 : 초성, 중성, 종성을 나눠서 각각 바이트를 할당함 -> 하지만 한글의 모든 글자를 담을 수 없었다. ex)펲
	행정망 표준 한글체계가 완성형이다.
	
	마이크로소프트에서 다국어를 생각해야했기에 유니코드 제정.
	2바이트 65000자 정도에 전세계 문자를 다 집어넣어서 코드체계를 정리함. 모든 문자를 담을 수 없으므로 계속 업글중.
	
	java의 char는 2바이트 크기를 가지고있고, 유니코드를 지원함. -> 한글, 한문, 일본어, 중국어 등
	
	그런데 웹이 생기면서 문제가 생김(홈페이지 열풍) -> 부족한 문자들이 많았다. 뷁 같은 글자가 유니코드에서 안먹힘
	유니코드와 호환이 되면서 확장이 된 새로운 문자체제의 필요성 -> UTF-8
	그래서 나중에 자바로 웹 프로그래밍 할 때는 문자열의 인코딩 방식을 UTF-8로 바꾸어서 사용해야 한다.
*/